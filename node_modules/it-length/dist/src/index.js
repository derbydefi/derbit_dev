function isAsyncIterable(thing) {
    return thing[Symbol.asyncIterator] != null;
}
function length(source) {
    if (isAsyncIterable(source)) {
        return (async () => {
            let count = 0;
            for await (const _ of source) { // eslint-disable-line no-unused-vars,@typescript-eslint/no-unused-vars
                count++;
            }
            return count;
        })();
    }
    else {
        let count = 0;
        for (const _ of source) { // eslint-disable-line no-unused-vars,@typescript-eslint/no-unused-vars
            count++;
        }
        return count;
    }
}
export default length;
//# sourceMappingURL=index.js.map